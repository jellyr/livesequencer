1. example usage: ********************

timidity -iA &
./live-sequencer stream.hs &
aconnect Mode TiMidity &

this should give you an ongoing stream
of notes

then change one of the numbers 
that appear in the lines like
"mid = note 64 300"

this should immediately have an effect
(change pitch and duration of some
of the notes)

2. input language: ***********************

syntax is first-order Haskell (no map, no fold),
pattern matching only at the definition level (no case),
no local bindings (no lambda, let, where)

semantics is similar to lazy evaluation,
the value of "main" is a stream of midi events
(On/Off <channel> <pitch> <velocity>)
or (Wait <milliseconds>)

in each step, the head of the stream gets reduced
to head normal form (with Cons at the top),
and the first arg of the Cons gets fully expanded
and it must be a midi event.

