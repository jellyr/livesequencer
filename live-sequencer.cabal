Name: live-sequencer
Version: 0.0
Author: Henning Thielemann and Johannes Waldmann
Maintainer: Johannes Waldmann <waldmann@imn.htwk-leipzig.de>, Henning Thielemann <haskell@henning-thielemann.de>
Category: Sound, Music, GUI
License: GPL
License-file: LICENSE
Cabal-Version: >= 1.6
Tested-With: GHC==6.12.3, GHC==7.2.1
Synopsis: Live coding of MIDI music
Description:
   An editor shows a textual description of music (like Haskore),
   an interpreter computes and emits a stream of MIDI events,
   and (that's the main point) the user can change the program on the fly.
   .
   1. example usage *****
   .
   @
   timidity -iA &
   ./live-sequencer Stream &
   aconnect Rewrite-Sequence TiMidity &
   @
   .
   this should give you an ongoing stream
   of notes
   .
   then change one of the numbers
   that appear in the lines like
   @mid = note 300 (c 4)@
   .
   and press CTRL-R for \"reloading\" that module into the interpreter
   this should immediately have an effect
   (change pitch and duration of some of the notes)
   .
   2. input language *****
   .
   language is Haskell with
   only strict pattern matching and
   pattern matching only at the definition level (no case),
   no local bindings (no lambda, let, where),
   no types (no type signatures, no type inference)
   .
   semantics is similar to lazy evaluation,
   the value of @main@ is a stream of midi events
   (@On/Off channel pitch velocity@)
   or (@Wait milliseconds@)
   .
   in each step, the head of the stream gets reduced
   to head normal form (with @:@ at the top),
   and the first arg of the @:@ gets fully expanded
   and it must be a midi event.
Build-Type: Simple

Data-Files:
  data/prelude/Prelude.hs
  data/Klingklong.hs
  data/Finite.hs
  data/Midi.hs
  data/Chords.hs
  data/Pitch.hs
  data/Band.hs
  data/Stream.hs
  data/Sweep.hs
  data/UD.hs
  data/Simplesong.hs
  data/List.hs

Source-Repository head
  Type: git
  Location: git://dfa.imn.htwk-leipzig.de/srv/git/seq/

Executable live-sequencer
  Hs-Source-Dirs: src
  Main-is: Console.hs
  Other-Modules:
    ALSA
    Utility
    Event
    IO
    Module
    Option
    Program
    Rewrite
    Rule
    Step
    Term
    Log
  GHC-Options: -Wall -threaded
  Build-Depends:
    transformers >=0.2.2 && <0.3,
    explicit-exception >=0.1.5 && <0.2,
    parsec >=2.1 && <3.2,
    pretty >=1.0 && <1.2,
    midi-alsa >=0.1.1 && <0.2,
    midi >=0.1.5 && <0.2,
    alsa-seq >=0.5 && <0.6,
    alsa-core >=0.5 && <0.6,
    data-accessor >=0.2.1 && <0.3,
    utility-ht >=0.0.6 && <0.1,
    containers >=0.3 && <0.5,
    directory >=1.0 && <1.2,
    filepath >=1.1 && <1.3,
    base >=4.2 && <5

Executable live-sequencer-gui
  Hs-Source-Dirs: src
  Main-is: GUI.hs
  Other-Modules:
    ALSA
    Utility
    Event
    IO
    Exception
    Module
    Option
    Program
    Rewrite
    Rule
    Step
    Term
    Log
  GHC-Options: -threaded -Wall
  If impl(ghc>=7.0)
    GHC-Options: -fwarn-tabs -fwarn-incomplete-uni-patterns
  Build-Depends:
    wx >=0.12.1 && <0.13,
    wxcore >=0.12.1 && <0.13,
    stm >=2.2 && <2.3,
    transformers >=0.2.2 && <0.3,
    explicit-exception >=0.1.5 && <0.2,
    parsec >=2.1 && <3.2,
    pretty >=1.0 && <1.2,
    midi-alsa >=0.1.1 && <0.2,
    midi >=0.1.5 && <0.2,
    alsa-seq >=0.5 && <0.6,
    alsa-core >=0.5 && <0.6,
    data-accessor >=0.2.1 && <0.3,
    utility-ht >=0.0.6 && <0.1,
    containers >=0.3 && <0.5,
    directory >=1.0 && <1.2,
    filepath >=1.1 && <1.3,
    base >=4.2 && <5
